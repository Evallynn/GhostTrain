name: build-webgl

on: workflow_dispatch
#on:
#  workflow_dispatch:
#  push:
#    branches:
#      - main

jobs:

  # Reference on how to set this up is here: https://www.youtube.com/watch?v=-txXtAfViEQ
  build-webgl:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '#nobuild')"
    # TODO: Should build own docker image. Below container from: https://game.ci/docs/docker/docker-images
    container: unityci/editor:2022.2.19f1-webgl-1.1
    steps:
        # Check out the project.
        - name: Checkout Project
          uses: actions/checkout@v1
          
        # TODO - Just being lazy here, should really build custom Docker from gableroux images.
        # Install Zip.
        - name: Install Zip
          run: |
            apt-get update && \
            apt-get install zip --assume-yes    
            
        # Install GIT.
        - name: Install GIT
          run: |
            apt-get update && \
            apt-get install git --assume-yes
            
        # Install LFTP.
        - name: Install LFTP
          run: |
            apt-get update && \
            apt-get install lftp --assume-yes
            
        # Decrypt our license file,
        - name: Decrypt the license file
          run: |
            openssl aes-256-cbc -d -in .github/Unity_v2022.x.ulf.enc -k ${{ secrets.UNITY_LICENSE_KEY }} >> .github/Unity_v2022.x.ulf
            ls -al .github
            
        # Debug workspace
        - name: Debug Workspace
          run: |
            echo 'opt'
            cd /opt
            pwd
            ls -al
            echo 'opt unity'
            cd /opt/unity
            pwd
            ls -al
            echo 'opt unity Editor'
            cd /opt/unity/Editor
            pwd
            ls -al
        
        # Activate unity
        - name: Activate Unity
          run: /opt/unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -manualLicenseFile .github/Unity_v2022.x.ulf || exit 0
          
        # Log in to GitHub, to allow access to shared packages. GIT_CREDENTIALS should use format: https://$username:$token@github.com/
        - name: setup-git-credentials
          uses: de-vri-es/setup-git-credentials@v2.0.10
          with:
            credentials: ${{ secrets.GIT_CREDENTIALS }}
          
        # Update build number
        - name: Update build number
          run: sed -i "s/UNITY_GAME_BUILD_VERSION = \"1.0\"/UNITY_GAME_BUILD_VERSION = \"1.0.${{ github.run_number }}\"/g" ./GhostTrain/Assets/Scripts/BuildNumber.cs
        
        # Build WebGL (build pipeline, required for asset bundles).
        - name: Build WebGL Player
          run: /opt/unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath ./GhostTrain -buildTarget Win -executeMethod BuildAssetBundles.PerformWebGLBuild -buildDir $GITHUB_WORKSPACE/GhostTrain
          
        # Zip up the WebGL build.
        - name: Zip WebGL Build
          run: |
            cd $GITHUB_WORKSPACE/GhostTrain/GhostTrain-WebGL
            pwd
            ls -al
            zip -r $GITHUB_WORKSPACE/GhostTrain-WebGL.zip ./
            
        # Send the WebGL zip on to Dropbox. Go here: https://www.dropbox.com/developers/apps/info/m5s80cc0fqsdtbu
        - name: Send WebGL Build to Dropbox
          uses: ./.github/actions/senddropbox
          id: sendfile-webgl
          with:
            filename: 'GhostTrain-WebGL.zip'
            token: ${{ secrets.DROPBOX_TOKEN }}
            project: GhostTrain
          
        # Clean up the WebGL build on ftp.
        #  - Connect via FTP, delete the escape directory and recreate it with appropriate permissions
        - name: Clean previous WebGL Build on website
          continue-on-error: true
          run: |
            lftp -c "open -u ${{ secrets.FTP_USER }},${{ secrets.FTP_PASSWORD }} ${{ secrets.FTP_IP }}; cd /var/www; rm -r ghosttrain"
          
        # Upload the  up the WebGL build on ftp.
        - name: Upload the latest WebGL Build on website
          run: |
            cd $GITHUB_WORKSPACE/GhostTrain/GhostTrain-WebGL/GhostTrain
            lftp -c "open -u ${{ secrets.FTP_USER }},${{ secrets.FTP_PASSWORD }} ${{ secrets.FTP_IP }}; cd /var/www; mkdir ghosttrain; chmod 755 ghosttrain; cd ghosttrain; mirror -R Build; mirror -R TemplateData; put . index.html; cd ..; chmod -R 755 ghosttrain"
    
        # Send a notification to Slack.
        - name: Send slack notification
          env:
            SLACK_WEBHOOK: ${{ secrets.SLACK_BUILD_WEBHOOK }}
            SLACK_CHANNEL: builds
          uses: Ilshidur/action-slack@master
          with:
            args: "WebGL build of GhostTrain - SUCCESS - https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} - Build: http://www.xmptgames.co.uk/ghosttrain/"
